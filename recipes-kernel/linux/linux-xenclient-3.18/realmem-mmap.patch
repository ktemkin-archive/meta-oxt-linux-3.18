################################################################################
SHORT DESCRIPTION: 
################################################################################
Give additional flags to /dev/mem mmap()'ed pages.

################################################################################
LONG DESCRIPTION: 
################################################################################
Force VM_SPECIAL (special vmas that are non-mergable, non-mlock()able) and
VM_DONTDUMP (Do not include in the core dump) flags on pages mapped using
/dev/mem char device.

################################################################################
CHANGELOG 
################################################################################
Original author: unknown
Port to 3.18: Eric Chanudet <chanudete@ainfosec.com>

################################################################################
REMOVAL 
################################################################################
?

################################################################################
UPSTREAM PLAN
################################################################################
None.

################################################################################
INTERNAL DEPENDENCIES 
################################################################################
?

################################################################################
PATCHES 
################################################################################
Index: linux-3.18.16/drivers/char/mem.c
===================================================================
--- linux-3.18.16.orig/drivers/char/mem.c	2015-06-14 18:19:31.000000000 +0200
+++ linux-3.18.16/drivers/char/mem.c	2015-06-19 15:19:04.932948921 +0200
@@ -321,9 +321,13 @@
 						&vma->vm_page_prot))
 		return -EINVAL;
 
-	vma->vm_page_prot = phys_mem_access_prot(file, vma->vm_pgoff,
-						 size,
-						 vma->vm_page_prot);
+	vma->vm_flags |= VM_DONTDUMP | VM_SPECIAL;
+	vma->vm_page_prot =  __pgprot(
+			pgprot_val(vm_get_page_prot(vma->vm_flags)) |
+			pgprot_val(phys_mem_access_prot(file,
+				vma->vm_pgoff,
+				size,
+				vma->vm_page_prot)));
 
 	vma->vm_ops = &mmap_mem_ops;
 
